@using GeneratorClient.Models;

@{
    var settings = new GenerationSettings();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>StableDiffusion Generator Client</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/tailwind.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/GeneratorClient.styles.css" asp-append-version="true" />

</head>
<body>
    <header>
        <nav class=" container-fluid navbar bg-black black dark:bg-zinc-900 shadow-md py-4 px-6">
            <div class="flex items-center justify-between">
                <div class="flex items-center">
                    @* <img src="~/images/gclogo.png" alt="Logo" class="mr-3" style="width: 40px; height: 40px;" /> *@
                    <span class="text-xl font-bold dark:text-white">StableDiffusion Generator Client</span>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" id="render-body-container" class="pb-3 p-8" style="width: 99vw;">
            @RenderBody()
        </main>
    </div>

    <footer class="bg-black border-top footer text-muted text-center">
        <div class="container">
            &nbsp;
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://kit.fontawesome.com/969d13854d.js" crossorigin="anonymous"></script>
    @await RenderSectionAsync("Scripts", required: false);

    <script>
        var allowedKeys = ["output-current", "output-overview", "quick-mode", "config-mode"]

        function renderPartial(key) {

            var isValidKey = allowedKeys.find(k => k === key);

            if (!isValidKey) {
                console.error("Invalid key: " + key);
                return;
            }

            console.log("Getting container for key: " + key + "-partial-container");

            var partialContainer = document.querySelector("#render-body-container");
            var container = partialContainer.querySelector("." + key + "-partial-container");
            
            if (!container) {
                console.error("No container found for key: " + key);
                return;
            }
            
            if (document.querySelectorAll("." + key + "-partial-container").length > 1) {
                console.error("Multiple containers found for key: " + key);
                return;
            }

            if (!container) {
                console.error("No container to place partial result in found for key: " + key);
                return;
            }

            var html = getHtml(key);
            container.innerHTML = html;
        }

        function getHtml(key) {

            if (key === "output-current") {
                return await Html.PartialAsync("_OutputCurrentPartial.cshtml", "https://placehold.co/600x400");

            } else if (key === "output-overview") {
                return await Html.PartialAsync("_OutputOverviewPartial.cshtml");

            } else if (key === "quick-mode") {
                return await Html.PartialAsync("_QuickModePartial.cshtml", settings);

            } else if (key === "config-mode") {
                return await Html.PartialAsync("_ConfigModePartial.cshtml");

            } else {
                console.error("No html found for key: " + key);
                return "";
            }
        }
    </script>
</body>
</html>
